package com.edwardwongtl.podcastchallenge.domain.model

import com.edwardwongtl.podcastchallenge.data.model.PodcastApiModel

data class PodcastModel(
    val id: String = "",
    val rss: String = "",
    val type: String = "",
    val email: String = "",
    val extra: PodcastExtraModel = PodcastExtraModel(),
    val image: String = "",
    val title: String = "",
    val country: String = "",
    val website: String = "",
    val genreIds: List<Int> = emptyList(),
    val itunesId: Int = 0,
    val publisher: String = "",
    val thumbnail: String = "",
    val isClaimed: Boolean = false,
    val description: String = "",
    val lookingFor: LookingForModel = LookingForModel(),
    val hasSponsors: Boolean = false,
    val listenScore: Int = 0,
    val totalEpisodes: Int = 0,
    val listenNotesUrl: String = "",
    val audioLengthSec: Int = 0,
    val explicitContent: Boolean = false,
    val latestEpisodeId: String = "",
    val latestPubDateMs: Long = 0L,
    val earliestPubDateMs: Long = 0L,
    val hasGuestInterviews: Boolean = false,
    val updateFrequencyHours: Int = 0,
    val listenScoreGlobalRank: String = "",
)

fun PodcastApiModel.toModel() = PodcastModel(
    id = id,
    rss = rss,
    type = type,
    email = email,
    extra = extra.toModel(),
    image = image,
    title = title,
    country = country,
    website = website,
    genreIds = genreIds,
    itunesId = itunesId,
    publisher = publisher,
    thumbnail = thumbnail,
    isClaimed = isClaimed,
    description = description,
    lookingFor = lookingFor.toModel(),
    hasSponsors = hasSponsors,
    listenScore = listenScore,
    totalEpisodes = totalEpisodes,
    listenNotesUrl = listenNotesUrl,
    audioLengthSec = audioLengthSec,
    explicitContent = explicitContent,
    latestEpisodeId = latestEpisodeId,
    latestPubDateMs = latestPubDateMs,
    earliestPubDateMs = earliestPubDateMs,
    hasGuestInterviews = hasGuestInterviews,
    updateFrequencyHours = updateFrequencyHours,
    listenScoreGlobalRank = listenScoreGlobalRank,
)